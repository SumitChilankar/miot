class CDMA:
    def __init__(self):
        self.wtable = None
        self.copy = None
        self.channel_sequence = None

    def setUp(self, data, num_stations):
        self.wtable = [[0] * num_stations for _ in range(num_stations)]
        self.copy = [[0] * num_stations for _ in range(num_stations)]

        self.buildWalshTable(num_stations, 0, num_stations - 1, 0, num_stations - 1, False)

        self.showWalshTable(num_stations)

        for i in range(num_stations):
            for j in range(num_stations):
                self.copy[i][j] = self.wtable[i][j]
                self.wtable[i][j] *= data[i]

        self.channel_sequence = [sum(row) for row in zip(*self.wtable)]

    def listenTo(self, sourceStation, num_stations):
        innerProduct = 0

        for i in range(num_stations):
            innerProduct += self.copy[sourceStation][i] * self.channel_sequence[i]

        print("The data received is:", innerProduct // num_stations)

    def buildWalshTable(self, len, i1, i2, j1, j2, isBar):
        if len == 2:
            if not isBar:
                self.wtable[i1][j1] = 1
                self.wtable[i1][j2] = 1
                self.wtable[i2][j1] = 1
                self.wtable[i2][j2] = -1
            else:
                self.wtable[i1][j1] = -1
                self.wtable[i1][j2] = -1
                self.wtable[i2][j1] = -1
                self.wtable[i2][j2] = 1
            return

        midi = (i1 + i2) // 2
        midj = (j1 + j2) // 2

        self.buildWalshTable(len // 2, i1, midi, j1, midj, isBar)
        self.buildWalshTable(len // 2, i1, midi, midj + 1, j2, isBar)
        self.buildWalshTable(len // 2, midi + 1, i2, j1, midj, isBar)
        self.buildWalshTable(len // 2, midi + 1, i2, midj + 1, j2, not isBar)

    def showWalshTable(self, num_stations):
        for i in range(num_stations):
            for j in range(num_stations):
                print(self.wtable[i][j], end=" ")
            print()
        print("-------------------------")


def main():
    num_stations = 4

    data = [-1, -1, 0, 1]

    channel = CDMA()
    channel.setUp(data, num_stations)

    sourceStation = 3

    channel.listenTo(sourceStation, num_stations)


if __name__ == "__main__":
    main()
